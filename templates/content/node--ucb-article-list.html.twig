{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}

{{ attach_library('boulder_base/ucb-article-list') }}

{# Base Url #}
{% set baseurlJSON = url('<front>')|render|trim('/') %}

{# Logged In - Used for showing errors to only authenticated #}
{% set logged_in_class = logged_in ? 'ucb-authenticated' : 'ucb-anonymous' %}

{# Show/Hide Date #}
{% set global_date_format = drupal_config('ucb_site_configuration.settings', 'article_date_format') %}

{# include and exclude options set by the user #}
{% set includeCategories = '' %}
{% set myCategories = content.field_ucb_filter_by_category|render|striptags|trim|split(' ') %}

{% set includeTags = '' %}
{% set myTags = content.field_ucb_filter_by_tag|render|striptags|trim|split(' ') %}

{% set excludeCategories = '' %}
{% set myExCategories = content.field_ucb_exclude_category|render|striptags|trim|split(' ') %}

{% set excludeTags = '' %}
{% set myExTags = content.field_ucb_exclude_tag|render|striptags|trim|split(' ') %}

{# Process include categories and tags as comma-separated strings #}
{% for item in myCategories %}
  {% if item %}
    {% if loop.first %}
      {% set includeCategories = (item|trim) %}
    {% else %}
      {% set includeCategories = includeCategories ~ ',' ~ (item|trim) %}
    {% endif %}
  {% endif %}
{% endfor %}

{% for item in myTags %}
  {% if item %}
    {% if loop.first %}
      {% set includeTags = (item|trim) %}
    {% else %}
      {% set includeTags = includeTags ~ ',' ~ (item|trim) %}
    {% endif %}
  {% endif %}
{% endfor %}

{# Process exclude categories and tags as comma-separated strings #}
{% for item in myExCategories %}
  {% if item %}
    {% if loop.first %}
      {% set excludeCategories = (item|trim) %}
    {% else %}
      {% set excludeCategories = excludeCategories ~ ',' ~ (item|trim) %}
    {% endif %}
  {% endif %}
{% endfor %}

{% for item in myExTags %}
  {% if item %}
    {% if loop.first %}
      {% set excludeTags = (item|trim) %}
    {% else %}
      {% set excludeTags = excludeTags ~ ',' ~ (item|trim) %}
    {% endif %}
  {% endif %}
{% endfor %}

{% set exposeCategory = content.field_ucb_expose_category|render|striptags|trim %}
{% set exposeTag = content.field_ucb_expose_tag|render|striptags|trim %}

<article{{ attributes.addClass('container', 'ucb-content-wrapper') }}>
  <h1{{ title_attributes.addClass('ucb-article-list-header', is_front ? 'visually-hidden') }}>
    {{ label }}
  </h1>

  <div {{ content_attributes }}>
    <div class="ucb-article-list-body">
      {{ content.body }}
    </div>
    <article-list{{ create_attribute({
      id: 'ucb-article-listing',
      class: ['ucb-article-list-container', logged_in_class],
      'base-uri' : baseurlJSON,
      'logged-in' : logged_in_class,
      'include-categories' : includeCategories,
      'include-tags' : includeTags,
      'exclude-categories': excludeCategories,
      'exclude-tags': excludeTags,
      'expose-categories' : exposeCategory,
      'expose-tags': exposeTag,
      'global-date-format': global_date_format,
      }) }}
      >
    </article-list>
  </div>
</article>
