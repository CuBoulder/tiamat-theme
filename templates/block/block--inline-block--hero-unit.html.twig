{#
/**
 * @file
 * Theme to implement a Hero Unit Block
 *
 * Background settings are set inline CSS
 * All other styling done through classes
#}

{{ attach_library('boulderD9_base/ucb-hero-unit') }}

{%
  set classes = [
    'block-content',
    'block-content--type--hero-unit' ~ block.bundle|clean_class,
    view_mode ? 'block--view-mode--' ~ view_mode|clean_class,
    not block.isPublished() ? 'block--unpublished',
    content['#block_content'].field_text_align.value,
    content['#block_content'].field_text_color.value
  ]
%}
{% set blockId = content['#block_content'].id() %}

{# set style for backgroung settings #}
{% if content['#block_content'].field_solid_colors.value is defined %}
	{% set bgValue = "background: var(#{content['#block_content'].field_solid_colors.value});" %}
{% else %}
	{% set bgValue = "background-color: inherit;" %}
{% endif %}

{# A background image will be used over a solid color #}
{% if content['#block_content'].field_background_media.entity.field_media_image.entity is defined %}
	{% set bgValue = "background-image:url(#{ file_url(content['#block_content'].field_background_media.entity.field_media_image.entity.fileuri) });background-repeat:no-repeat;background-position:center;background-size:cover;" %}
{% endif %}

{# URL if a video is used instead of an image #}
{% if content['#block_content'].field_background_media.entity.field_media_oembed_video is defined %}
	{% set videoURL = content['#block_content'].field_background_media.entity.field_media_oembed_video.value %}
{% endif %}

{# set classes for the size of the component #}
{% if content['#block_content'].field_size.value is same as("0") %}
	{% set size = "size-large" %}
{% elseif content['#block_content'].field_size.value is same as("1") %}
	{% set size = "size-medium" %}
{% else %}
	{% set size = "size-small" %}
{% endif %}

{# get the state of the overlay toggle and the color of the text #}
{% set overlayClass = "" %}
{% if content['#block_content'].field_ucb_hero_overlay.value %}
	{# overlay requested set to dark #}
	{% set overlayClass = "ucb-overlay-dark" %}

	{# dark text, so switch to the light overlay instead #}
	{% if content['#block_content'].field_text_color.value == "text-body" %}
		{% set overlayClass = "ucb-overlay-light" %}
	{% endif %}
{% endif %}

<div{{attributes.addClass(classes)}}>
	{{ title_prefix }}
	{% if label %}
		<h2{{title_attributes}}>{{ label }}</h2>
	{% endif %}
	{{ title_suffix }}
	{% block content %}
		<div{{attributes.addClass(classes).setAttribute("style","#{bgValue}").addClass(size,overlayClass)}}>
			{% if videoURL is defined %}
				<div hidden class="ucb-hero-unit-video-wrapper">
					<div class="ucb-hero-unit-video-player-wrapper" id="ucb_hero_unit_video_player_{{ blockId }}"></div>
					<div class="ucb-hero-unit-video-controls-wrapper">
						<div class="ucb-hero-unit-video-controls">
							<span class="ucb-hero-unit-video-control-button ucb-hero-unit-video-play-pause" title="Play/Pause video">
								<i class="fa fa-play"></i>
							</span>
						</div>
					</div>
				</div>
				<script type="text/javascript">
					window.addEventListener('load', () => enableVideoHero('{{ videoURL }}', 'ucb_hero_unit_video_player_  {{ blockId }}'));
				</script>
			{% endif %}
			{% set linkColor = content['#block_content'].field_link_color.value %}
			{# Dont let twig render the links #}
			<div class="container ucb-hero-unit-content">
				<div class="row">
					{% if content['#block_content'].field_text_align.value == "text-righthalf" %}
						<div class="col-12 col-md-6"></div>
					{% endif %}
					<div class="col">
						{{ content|without('field_links') }}
						{# Render links here #}
						{# <p> {{ dump(content['#block_content'].field_links.value) }} </p> #}
							{% for item in content['#block_content'].field_links.value %}
								<a href="{{ item.uri }}" class="button {{ linkColor }}"> {{ item.title }}
							</a>
						{% endfor %}
					</div>
					{% if content['#block_content'].field_text_align.value == "text-lefthalf" %}
						<div class="col-12 col-md-6"></div>
					{% endif %}
				</div>
			</div>
		</div>
	{% endblock %}
</div>
